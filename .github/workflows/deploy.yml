name: Deploy CDK Stack

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache npm packages
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install AWS CLI and CDK CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update
          npm install -g aws-cdk

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Grant execute permission to gradlew and build Java project
        run: |
          chmod +x gradlew
          ./gradlew clean build --no-daemon

      - name: Install TypeScript dependencies and build
        working-directory: eks
        run: |
          npm ci
          npm run build

      - name: Bootstrap CDK
        run: |
          export AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          cdk bootstrap aws://${AWS_ACCOUNT_ID}/${{ secrets.AWS_REGION }}

      - name: Deploy Java CDK Stack
        run: cdk deploy --debug --app "java -jar build/libs/app-1.0-SNAPSHOT.jar" --require-approval never --all

      - name: Wait for Lambda function to be ready
        run: sleep 30

      - name: Set Lambda environment variables
        run: |
          aws lambda update-function-configuration \
          --function-name UpdateGitOpsRepo \
          --environment '{"Variables":{"GITHUB_TOKEN":"${{ secrets.GITHUB_TOKEN }}","GITOPS_REPO":"${{ secrets.GITOPS_REPO }}"}}'

      - name: Deploy TypeScript EKS Stack
        working-directory: eks
        run: cdk deploy --require-approval never --all -a "npx ts-node lib/index.ts"
